@using Maddalena.Modules.Blog
@model BlogArticle

@{
    ViewData["Title"] = "Create";
}

<h2>Add a new article to the blog</h2>

<form asp-action="Create" style="width: 100%">
    <script>
        function addValue()
        {
            var text = $("#txtNewCategory").val();

            if (text === null || text.match(/^ *$/) !== null) return;

            $('#category').append('<option value="' + text + '" selected="selected">' + text + '</option>');
        }
    </script>
    <div class="row">
        <div class="col-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" required/>
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-6">
                        <label asp-for="Category" class="control-label"></label>
                        <select name="category" id="category" class="form-control">
                            @foreach (var cat in BlogArticle.Categories)
                            {
                                <option value="@cat">@cat</option>
                            }
                        </select>
                        <span asp-validation-for="Category" class="text-danger"></span>
                    </div>
                    <div class="col-6">
                        <div class="form-group">
                            <label class="control-label">Add new category</label>
                            <div class="input-group">
                                <input type="text" id="txtNewCategory" class="form-control" placeholder="search..."/>
                                <span class="input-group-addon input-group-addon-btn bg-white">
                                    <a href="javascript:addValue()" id="addOptionToCategory">Add</a>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Link" class="control-label"></label>
                <input asp-for="Link" class="form-control" required/>
                <span asp-validation-for="Link" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Body" class="control-label"></label>
                <textarea asp-for="Body" id="area_editor" class="form-control" rows="7" required></textarea>
                <span asp-validation-for="Body" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="Visible" checked="checked" required/> @Html.DisplayNameFor(model => model.Visible)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    $(document).ready(function () {
        var editor = new Jodit('#area_editor',
            {
                textIcons: false,
                iframe: false,
                iframeStyle: '*,.jodit_wysiwyg {color:red;}',
                height: 300,
                defaultMode: Jodit.MODE_WYSIWYG,
                observer: {
                    timeout: 100
                },
                uploader: {
                    url: 'http://mercati.news/file/upload'
                },
                /*filebrowser: {
                    // buttons: ['list', 'tiles', 'sort'],
                    ajax: {
                        url: 'https://xdsoft.net/jodit/connector/index.php'
                    }
                },*/
                commandToHotkeys: {
                    'openreplacedialog': 'ctrl+p'
                }
                // buttons: ['symbol'],
                // disablePlugins: 'hotkeys,mobile'
            });


        var options =
        {
            success: function (response, statusText, xhr, $form) {
                var s = window[response.onSuccess];
                s(response);
            }

            // other available options:
            //url:       url         // override for form's 'action' attribute
            //type:      type        // 'get' or 'post', override for form's 'method' attribute
            //dataType:  null        // 'xml', 'script', or 'json' (expected server response type)
            //clearForm: true        // clear all form fields after successful submit
            //resetForm: true        // reset the form after successful submit

            // $.ajax options can be used here too, for example:
            //timeout:   3000
        };

        // bind form using 'ajaxForm'
        $('.ajax-form').ajaxForm(options);
    });

</script>